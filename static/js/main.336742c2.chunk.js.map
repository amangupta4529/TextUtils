{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","about","role","tabindex","style","display","onClick","toggleMode","TextForm","useState","text","setText","split","length","words","setWords","color","heading","rows","value","onChange","event","console","log","target","backgroundColor","toUpperCase","alert","toLowerCase","Alert","msg","App","setMode","setalert","showAlert","message","setTimeout","modes","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.336742c2.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode!=='black'?\"light\":\"dark\"} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.about}\r\n                </Link> */}\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  {props.about}\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item dropdown\">\r\n                <a\r\n                  className=\"nav-link dropdown-toggle\"\r\n                  href=\"#\"\r\n                  id=\"navbarDropdown\"\r\n                  role=\"button\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Dropdown\r\n                </a>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"#\">\r\n                      Action\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"#\">\r\n                      Another action\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <hr className=\"dropdown-divider\" />\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"#\">\r\n                      Something else here\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className=\"nav-link disabled\"\r\n                  href=\"#\"\r\n                  tabindex=\"-1\"\r\n                  aria-disabled=\"true\"\r\n                >\r\n                  Disabled\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <div style={{display:'flex'}}>\r\n              <button id='red' className=\"colorbtn\" onClick={()=>{props.toggleMode(\"red\"); }}></button>\r\n              <button id=\"purple\" className=\"colorbtn\" onClick={()=>props.toggleMode(\"purple\")}></button>\r\n              <button id=\"green\" className=\"colorbtn\" onClick={()=>props.toggleMode(\"green\")}></button>\r\n              <button id=\"dark\" className=\"colorbtn\" onClick={()=>props.toggleMode(\"black\")}></button>\r\n</div>\r\n</div>\r\n          \r\n         \r\n        </div>\r\n        \r\n      </nav>\r\n    \r\n  )\r\n}\r\nNavbar.propTypes = { title: PropTypes.string,about: PropTypes.string};\r\nexport default Navbar;\r\n","import React,{useState} from \"react\";\r\nexport default function TextForm(props){\r\n    const handleUpClick=()=>{\r\n        console.log(\"handleUpClick called\");\r\n        setText(text.toUpperCase());\r\n        props.alert(\"Converted To Uppercase\",\"success\");\r\n    }\r\n    const handleLowerClick=()=>{\r\n      console.log(\"handleUpClick called\");\r\n      setText(text.toLowerCase());\r\n      props.alert(\"Converted To Lowercase\",\"success\");\r\n    }\r\n    const handleOnChhange=(event)=>{\r\n        console.log(\"OnChhange called\");\r\n        setText(event.target.value);\r\n        let words=text.split(\" \").length;\r\n        \r\n        setWords(words);\r\n    }\r\n    const clear=()=>{\r\n      setText(\"\");\r\n      setWords(0);\r\n      props.alert(\"Text Cleraed\",\"success\");\r\n\r\n    }\r\n    const [text,setText]=useState('Enter text here');\r\n    const [words,setWords]=useState(text.split(\" \").length);\r\n    \r\n  return (\r\n    <>\r\n    <div className=\"container\" >\r\n      <div className=\"mb-3\">\r\n        <h1 style={{\r\n        color:props.mode==='black'?'white':'black'\r\n        }}>{props.heading}</h1>\r\n        <textarea\r\n          className=\"form-control \"\r\n          id=\"exampleFormControlTextarea1\"\r\n          rows=\"8\"\r\n          value={text}\r\n          onChange={handleOnChhange}\r\n          style={{backgroundColor:props.mode==='black'?'grey':'white',\r\n                  color:props.mode==='black'?'white':'black',\r\n                \r\n        }}\r\n        ></textarea>\r\n      </div>\r\n      <button className='btn btn-primary' onClick={handleUpClick}>convert to Uppercase</button>\r\n      <button className='btn btn-primary mx-2' onClick={handleLowerClick}>convert to Lowercase</button>\r\n      <button className='btn btn-primary mx-2' onClick={clear}>Clear Text</button>\r\n\r\n    </div>\r\n    <div className=\"container my-3\" style={{\r\n                  color:props.mode==='black'?'white':'black',\r\n\r\n        }}>\r\n       <h1 >your text summary</h1>\r\n      <p>{words} words and {text.length} character</p>\r\n      <p>{0.008*text.split(\" \").length}Minutes read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter Something To Preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        props.alert && <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{props.alert.type}</strong>:{props.alert.msg}\r\n\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './component/Navbar';\nimport TextForm from './component/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './component/Alert';\n\nfunction App(){\n  const [mode, setMode] = useState('light');\n  const [alert, setalert] = useState(null);\n//   const [myStyle,setyStyle]=useState({\n//     color:mode=='black'?'white':'black',\n//     backgroundColor:mode\n// });\n  const showAlert=(message,type)=>{\n      setalert({\n        msg:message,\n        type:type\n      })\n      setTimeout(()=>{\n        setalert(null);\n      },2000)\n\n  }\n  const toggleMode=(modes)=>{\n        setMode(modes);\n        // setyStyle({color:modes=='black'?'white':'black',\n        // backgroundColor:modes});\n        document.body.style.backgroundColor=modes;\n        showAlert(modes+\" Mode Has Been Enabled\",\"success\");\n        document.title='TextUtils '+modes+\" has been enabled\"\n\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"Text Analyzer\" mode={mode} about=\"about us\" toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container\">\n\n    {/* <Switch>\n          <Route exact path=\"/about\" mode={mode}>\n            <About myStyle={myStyle}/>\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n          <TextForm alert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          {/* </Route>\n        </Switch> */}\n      \n    </div>\n    {/* <About/> */}\n    \n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}